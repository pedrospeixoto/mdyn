X$y <- X$X1 + 2*X$X2 + 3*X$X3 + rnorm(n)
Q <- gramSchmidt(as.matrix(X[,1:4]))
X[,1:4] <- Q$Q
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
mt <- lm(y ~ X1 + X2 + X3 + X4,train)
mv <- lm(y ~ X1 + X2 + X3 + X4,val)
100*max(abs(mt$coefficients-mv$coefficients))/max(abs(c(mv$coefficients,mt$coefficients)))
n <- 5000
X <- data.frame("X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + 2*X$X2 + 3*X$X3 + rnorm(n)
Q <- gramSchmidt(as.matrix(X[,1:4]))
X[,1:4] <- Q$Q
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
mt <- lm(y ~ X1 + X2 + X3 + X4,train)
mv <- lm(y ~ X1 + X2 + X3 + X4,val)
100*max(abs(mt$coefficients-mv$coefficients))/max(abs(c(mv$coefficients,mt$coefficients)))
mt$coefficients
mv$coefficients
n <- 5000
X <- data.frame("X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + 2*X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:4]))
train[,1:4] <- Q$Q
Q <- gramSchmidt(as.matrix(val[,1:4]))
val[,1:4] <- Q$Q
mt <- lm(y ~ X1 + X2 + X3 + X4,train)
mv <- lm(y ~ X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
n <- 50000
X <- data.frame("X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + 2*X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:4]))
train[,1:4] <- Q$Q
Q <- gramSchmidt(as.matrix(val[,1:4]))
val[,1:4] <- Q$Q
mt <- lm(y ~ X1 + X2 + X3 + X4,train)
mv <- lm(y ~ X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
n <- 50000
X <- data.frame("X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + 2*X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.5*n),]
val <- X[(floor(0.5*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:4]))
train[,1:4] <- Q$Q
Q <- gramSchmidt(as.matrix(val[,1:4]))
val[,1:4] <- Q$Q
mt <- lm(y ~ X1 + X2 + X3 + X4,train)
mv <- lm(y ~ X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
summary(mt)
anova(mt)
mean(mt$residuals^2)
mean(mv$residuals^2)
n <- 50000
X <- data.frame("X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + 2*X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:4]))
train[,1:4] <- Q$Q
Q <- gramSchmidt(as.matrix(val[,1:4]))
val[,1:4] <- Q$Q
mt <- lm(y ~ X1 + X2 + X3 + X4,train)
mv <- lm(y ~ X1 + X2 + X3 + X4,val)
mean(mt$residuals^2)
mean(mv$residuals^2)
n <- 50000
X <- data.frame("X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:4]))
train[,1:4] <- Q$Q
Q <- gramSchmidt(as.matrix(val[,1:4]))
val[,1:4] <- Q$Q
mt <- lm(y ~ X1 + X2 + X3 + X4,train)
mv <- lm(y ~ X1 + X2 + X3 + X4,val)
mean(mt$residuals^2)
mean(mv$residuals^2)
mt$residuals
mt <- lm(y ~ X1 + X2 + X3 + X4,train)
mt$coefficients
round(mt$coefficients,3)
mt <- lm(y ~ X1 + X2 + X3,train)
round(mt$coefficients,3)
mt <- lm(y ~ X1 + X2,train)
round(mt$coefficients,3)
mt <- lm(y ~ 0 + X1 + X2 + X3 + X4,train)
round(mt$coefficients,3)
mt <- lm(y ~ 0 + X1 + X2 + X3,train)
round(mt$coefficients,3)
mt <- lm(y ~ 0 + X1 + X2,train)
round(mt$coefficients,3)
mt <- lm(y ~ 0 + X1,train)
round(mt$coefficients,3)
n <- 50000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
Q <- gramSchmidt(as.matrix(val[,1:5]))
val[,1:5] <- Q$Q
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
round(mt$coefficients,3)
mt <- lm(y ~ 0 + int + X1 + X2 + X3,train)
round(mt$coefficients,3)
mt <- lm(y ~ 0 + int + X1 + X2,train)
round(mt$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
mt <- lm(y ~ 0 + int + X1 + X2,train)
mt <- lm(y ~ 0 + int + X1 + X2,train)
mt2 <- lm(y ~ 0 + int + X1 + X2,X[1:floor(0.8*n),])
mt
mt2
mean(mt$residuals^2)
mean(mt2$residuals^2)
n <- 50000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
Q <- gramSchmidt(as.matrix(val[,1:5]))
val[,1:5] <- Q$Q
mt <- lm(y ~ 0 + int + X1 + X2,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
mean(mt$residuals^2)
mean(mv$residuals^2)
n <- 50000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
Q <- gramSchmidt(as.matrix(val[,1:5]))
val[,1:5] <- Q$Q
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
mean(mt$residuals^2)
mean(mv$residuals^2)
mt$coefficients
round(mt$coefficients,3)
round(mt$coefficients,3)
round(mv$coefficients,3)
##########################
n <- 50000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
solve(Q$R)
val[,1:5]
val[,1:5] <- val[,1:5] %*% solve(Q$R)
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
val[,1:5]
train[,1:5]
sum(va[,1]*val[,2])
sum(val[,1]*val[,2])
sum(val[,1]*val[,3])
sum(val[,1]*val[,4])
sum(train[,1]*train[,4])
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 100000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
summary(mt)
summary(mv)
##########################
n <- 100000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
##########################
n <- 100000000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
##########################
n <- 1000000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 20
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 40
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 100
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 200
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 300
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 400
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 500
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
##########################
n <- 5000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
sum((Qt$R - Qv$R)^2)
##########################
n <- 5000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
sum((Qt$R - Qv$R)^2)
max(abs(Qt$R - Qv$R))
Qt$R
Qv$R
##########################
n <- 50000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n,sd = 20)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R - Qv$R))
Qt$R
Qv$R
##########################
n <- 50000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Q <- gramSchmidt(as.matrix(train[,1:5]))
train[,1:5] <- Q$Q
val[,1:5] <- as.matrix(val[,1:5]) %*% solve(Q$R)
mt <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,train)
mv <- lm(y ~ 0 + int + X1 + X2 + X3 + X4,val)
round(mt$coefficients,3)
round(mv$coefficients,3)
mean(mt$residuals^2)
mean(mv$residuals^2)
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R - Qv$R))
Qt$R
Qv$R
n <- 50000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R - Qv$R))
n <- 50000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
Qt$R
Qv$R
n <- 500000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R - Qv$R))
Qt$R
Qv$R
max(abs(Qt$R/floor(0.8*n) - Qv$R/(n-floor(0.8*n))))
n <- 50
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R/floor(0.8*n) - Qv$R/(n-floor(0.8*n))))
n <- 100
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R/floor(0.8*n) - Qv$R/(n-floor(0.8*n))))
n <- 1000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R/floor(0.8*n) - Qv$R/(n-floor(0.8*n))))
n <- 10000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R/floor(0.8*n) - Qv$R/(n-floor(0.8*n))))
n <- 100000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R/floor(0.8*n) - Qv$R/(n-floor(0.8*n))))
n <- 100000
X <- data.frame("int" = 1,"X1" = rnorm(n),"X2" = rnorm(n,10,5),"X3" = rpois(n,50),"X4" = rexp(n,3))
X$y <- 10 + X$X1 + X$X2 + 3*X$X3 + rnorm(n)
train <- X[1:floor(0.8*n),]
val <- X[(floor(0.8*n)+1):n,]
Qt <- gramSchmidt(as.matrix(train[,1:5]))
Qv <- gramSchmidt(as.matrix(val[,1:5]))
max(abs(Qt$R/sqrt(floor(0.8*n)) - Qv$R/sqrt(n-floor(0.8*n))))
Qt$R/sqrt(floor(0.8*n))
Qv$R/sqrt(n-floor(0.8*n))
library("ggplot2")
theme_set(theme_bw())
library("sf")
setwd("~/Downloads/sp_setores_censitarios")
require(rgdal)
require(ggplot2)
shp <- readOGR(dsn = "33SEE250GC_SIR.shp", stringsAsFactors = F)
summary(shp)
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
map
map + theme_void()
shp$CD_GEOCODI
shp$NM_BAIRRO
shp$CD_GEOCODI
shp$lat
shp$latc
shp
summary(shp)
